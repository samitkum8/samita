<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="nouveau_pokersorter"><sessioninfo id="samita-desktop-b945f680" start="1667058377325" dump="1667058377558"/><package name="app"><class name="app/PokerSorter" sourcefilename="PokerSorter.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="14"><counter type="INSTRUCTION" missed="48" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="PokerSorter.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="6" ci="0" mb="2" cb="0"/><line nr="15" mi="10" ci="0" mb="2" cb="0"/><line nr="16" mi="10" ci="0" mb="0" cb="0"/><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="exception"><class name="exception/PokerException" sourcefilename="PokerException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="6"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="exception/IllegalFileTypeException" sourcefilename="IllegalFileTypeException.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IllegalFileTypeException.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PokerException.java"><line nr="6" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="2" covered="0"/></package><package name="comparator"><class name="comparator/SortCardByValue" sourcefilename="SortCardByValue.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lmodel/Card;Lmodel/Card;)I" line="11"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="comparator/SortCombinationByRank" sourcefilename="SortCombinationByRank.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lmodel/Combination;Lmodel/Combination;)I" line="12"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="SortCombinationByRank.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="2"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SortCardByValue.java"><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="service"><class name="service/GameService" sourcefilename="GameService.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="playGame" desc="(Ljava/io/BufferedReader;)[I" line="19"><counter type="INSTRUCTION" missed="13" covered="50"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="playGame" desc="(Ljava/lang/String;)[I" line="38"><counter type="INSTRUCTION" missed="12" covered="16"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="playTour" desc="(Ljava/lang/String;)[I" line="51"><counter type="INSTRUCTION" missed="15" covered="63"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="diplayScore" desc="()V" line="65"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="40" covered="163"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="service/PlayerHandService" sourcefilename="PlayerHandService.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortHand" desc="(Lmodel/Hand;)Lmodel/Hand;" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="service/PokerCombinationService" sourcefilename="PokerCombinationService.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getHandCombination" desc="(Lmodel/Hand;)Lmodel/HandCombinations;" line="18"><counter type="INSTRUCTION" missed="36" covered="75"/><counter type="BRANCH" missed="9" covered="11"/><counter type="LINE" missed="9" covered="14"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortCombination" desc="(Lmodel/HandCombinations;)Lmodel/HandCombinations;" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRoyalFlush" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="61"><counter type="INSTRUCTION" missed="48" covered="12"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStraightFlush" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="80"><counter type="INSTRUCTION" missed="26" covered="9"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="3" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFourOfAKind" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="96"><counter type="INSTRUCTION" missed="126" covered="35"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="10" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFullHouse" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="121"><counter type="INSTRUCTION" missed="98" covered="35"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="8" covered="3"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isFlush" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="143"><counter type="INSTRUCTION" missed="57" covered="43"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isStraight" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="161"><counter type="INSTRUCTION" missed="45" covered="31"/><counter type="BRANCH" missed="5" covered="3"/><counter type="LINE" missed="4" covered="3"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isThreeOfKind" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="179"><counter type="INSTRUCTION" missed="122" covered="35"/><counter type="BRANCH" missed="6" covered="2"/><counter type="LINE" missed="10" covered="3"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isTwoPair" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="198"><counter type="INSTRUCTION" missed="183" covered="51"/><counter type="BRANCH" missed="9" covered="3"/><counter type="LINE" missed="15" covered="4"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isPair" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="222"><counter type="INSTRUCTION" missed="177" covered="126"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="15" covered="10"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isHighCard" desc="(Lmodel/Hand;Lmodel/HandCombinations;)Ljava/lang/Boolean;" line="252"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="918" covered="536"/><counter type="BRANCH" missed="69" covered="33"/><counter type="LINE" missed="84" covered="56"/><counter type="COMPLEXITY" missed="47" covered="17"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PlayerHandService.java"><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="1" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PokerCombinationService.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="1" cb="1"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="1" cb="1"/><line nr="23" mi="4" ci="0" mb="0" cb="0"/><line nr="24" mi="0" ci="6" mb="1" cb="1"/><line nr="25" mi="4" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="1" cb="1"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="1" cb="1"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="1" cb="1"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="1" cb="1"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="1" cb="1"/><line nr="35" mi="4" ci="0" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="2"/><line nr="37" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="1" cb="1"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="61" mi="1" ci="9" mb="1" cb="1"/><line nr="62" mi="9" ci="0" mb="2" cb="0"/><line nr="63" mi="9" ci="0" mb="2" cb="0"/><line nr="64" mi="9" ci="0" mb="2" cb="0"/><line nr="65" mi="8" ci="0" mb="2" cb="0"/><line nr="66" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="6" ci="6" mb="3" cb="1"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="1" ci="16" mb="1" cb="1"/><line nr="97" mi="16" ci="0" mb="2" cb="0"/><line nr="98" mi="15" ci="0" mb="2" cb="0"/><line nr="99" mi="14" ci="0" mb="0" cb="0"/><line nr="100" mi="14" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="16" mb="1" cb="1"/><line nr="103" mi="16" ci="0" mb="2" cb="0"/><line nr="104" mi="15" ci="0" mb="2" cb="0"/><line nr="105" mi="14" ci="0" mb="0" cb="0"/><line nr="106" mi="14" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="121" mi="1" ci="16" mb="1" cb="1"/><line nr="122" mi="16" ci="0" mb="2" cb="0"/><line nr="123" mi="15" ci="0" mb="2" cb="0"/><line nr="124" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="1" ci="16" mb="1" cb="1"/><line nr="127" mi="16" ci="0" mb="2" cb="0"/><line nr="128" mi="15" ci="0" mb="2" cb="0"/><line nr="129" mi="14" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="21" mb="0" cb="2"/><line nr="144" mi="1" ci="19" mb="1" cb="1"/><line nr="145" mi="20" ci="0" mb="2" cb="0"/><line nr="146" mi="19" ci="0" mb="2" cb="0"/><line nr="147" mi="14" ci="0" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="161" mi="0" ci="15" mb="0" cb="2"/><line nr="162" mi="1" ci="13" mb="1" cb="1"/><line nr="163" mi="14" ci="0" mb="2" cb="0"/><line nr="164" mi="13" ci="0" mb="2" cb="0"/><line nr="165" mi="14" ci="0" mb="0" cb="0"/><line nr="166" mi="3" ci="0" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="0" cb="0"/><line nr="179" mi="1" ci="16" mb="1" cb="1"/><line nr="180" mi="15" ci="0" mb="2" cb="0"/><line nr="181" mi="14" ci="0" mb="0" cb="0"/><line nr="182" mi="14" ci="0" mb="0" cb="0"/><line nr="183" mi="14" ci="0" mb="0" cb="0"/><line nr="184" mi="3" ci="0" mb="0" cb="0"/><line nr="186" mi="1" ci="16" mb="1" cb="1"/><line nr="187" mi="15" ci="0" mb="2" cb="0"/><line nr="188" mi="14" ci="0" mb="0" cb="0"/><line nr="189" mi="14" ci="0" mb="0" cb="0"/><line nr="190" mi="14" ci="0" mb="0" cb="0"/><line nr="191" mi="3" ci="0" mb="0" cb="0"/><line nr="193" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="1" ci="16" mb="1" cb="1"/><line nr="199" mi="15" ci="0" mb="2" cb="0"/><line nr="200" mi="14" ci="0" mb="0" cb="0"/><line nr="201" mi="14" ci="0" mb="0" cb="0"/><line nr="202" mi="14" ci="0" mb="0" cb="0"/><line nr="203" mi="3" ci="0" mb="0" cb="0"/><line nr="204" mi="1" ci="16" mb="1" cb="1"/><line nr="205" mi="15" ci="0" mb="2" cb="0"/><line nr="206" mi="14" ci="0" mb="0" cb="0"/><line nr="207" mi="14" ci="0" mb="0" cb="0"/><line nr="208" mi="14" ci="0" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="210" mi="1" ci="16" mb="1" cb="1"/><line nr="211" mi="15" ci="0" mb="2" cb="0"/><line nr="212" mi="14" ci="0" mb="0" cb="0"/><line nr="213" mi="14" ci="0" mb="0" cb="0"/><line nr="214" mi="14" ci="0" mb="0" cb="0"/><line nr="215" mi="3" ci="0" mb="0" cb="0"/><line nr="217" mi="0" ci="3" mb="0" cb="0"/><line nr="222" mi="0" ci="16" mb="1" cb="1"/><line nr="223" mi="14" ci="0" mb="0" cb="0"/><line nr="224" mi="14" ci="0" mb="0" cb="0"/><line nr="225" mi="14" ci="0" mb="0" cb="0"/><line nr="226" mi="14" ci="0" mb="0" cb="0"/><line nr="227" mi="3" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="16" mb="1" cb="1"/><line nr="229" mi="14" ci="0" mb="0" cb="0"/><line nr="230" mi="14" ci="0" mb="0" cb="0"/><line nr="231" mi="14" ci="0" mb="0" cb="0"/><line nr="232" mi="14" ci="0" mb="0" cb="0"/><line nr="233" mi="3" ci="0" mb="0" cb="0"/><line nr="234" mi="0" ci="16" mb="1" cb="1"/><line nr="235" mi="14" ci="0" mb="0" cb="0"/><line nr="236" mi="14" ci="0" mb="0" cb="0"/><line nr="237" mi="14" ci="0" mb="0" cb="0"/><line nr="238" mi="14" ci="0" mb="0" cb="0"/><line nr="239" mi="3" ci="0" mb="0" cb="0"/><line nr="240" mi="0" ci="16" mb="0" cb="2"/><line nr="241" mi="0" ci="14" mb="0" cb="0"/><line nr="242" mi="0" ci="14" mb="0" cb="0"/><line nr="243" mi="0" ci="14" mb="0" cb="0"/><line nr="244" mi="0" ci="14" mb="0" cb="0"/><line nr="245" mi="0" ci="3" mb="0" cb="0"/><line nr="247" mi="0" ci="3" mb="0" cb="0"/><line nr="252" mi="0" ci="14" mb="0" cb="0"/><line nr="253" mi="0" ci="14" mb="0" cb="0"/><line nr="254" mi="0" ci="14" mb="0" cb="0"/><line nr="255" mi="0" ci="14" mb="0" cb="0"/><line nr="256" mi="0" ci="14" mb="0" cb="0"/><line nr="257" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="918" covered="536"/><counter type="BRANCH" missed="69" covered="33"/><counter type="LINE" missed="84" covered="56"/><counter type="COMPLEXITY" missed="47" covered="17"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GameService.java"><line nr="10" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="2"/><line nr="23" mi="1" ci="5" mb="1" cb="1"/><line nr="24" mi="0" ci="4" mb="1" cb="1"/><line nr="25" mi="12" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="9" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="1" cb="1"/><line nr="39" mi="12" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="1" cb="1"/><line nr="57" mi="0" ci="16" mb="0" cb="0"/><line nr="59" mi="15" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="40" covered="163"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="958" covered="710"/><counter type="BRANCH" missed="73" covered="39"/><counter type="LINE" missed="87" covered="91"/><counter type="COMPLEXITY" missed="51" covered="25"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="3"/></package><package name="enumtype"><class name="enumtype/CardSuit" sourcefilename="CardSuit.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOfLabel" desc="(Ljava/lang/String;)Lenumtype/CardSuit;" line="28"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="82"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="enumtype/CardValue" sourcefilename="CardValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/String;Ljava/lang/Integer;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVal" desc="()Ljava/lang/Integer;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOfLabel" desc="(Ljava/lang/String;)Lenumtype/CardValue;" line="45"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="213"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="enumtype/CardCombination" sourcefilename="CardCombination.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/lang/Integer;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRank" desc="()Ljava/lang/Integer;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="124"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="CardCombination.java"><line nr="3" mi="0" ci="44" mb="0" cb="0"/><line nr="5" mi="0" ci="8" mb="0" cb="0"/><line nr="6" mi="0" ci="8" mb="0" cb="0"/><line nr="7" mi="0" ci="8" mb="0" cb="0"/><line nr="8" mi="0" ci="8" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="0"/><line nr="10" mi="0" ci="8" mb="0" cb="0"/><line nr="11" mi="0" ci="8" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="8" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="135"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CardSuit.java"><line nr="3" mi="0" ci="20" mb="0" cb="0"/><line nr="5" mi="0" ci="7" mb="0" cb="0"/><line nr="6" mi="0" ci="7" mb="0" cb="0"/><line nr="7" mi="0" ci="7" mb="0" cb="0"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="16" mb="1" cb="1"/><line nr="29" mi="0" ci="5" mb="0" cb="2"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="82"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CardValue.java"><line nr="3" mi="0" ci="56" mb="0" cb="0"/><line nr="5" mi="0" ci="9" mb="0" cb="0"/><line nr="6" mi="0" ci="9" mb="0" cb="0"/><line nr="7" mi="0" ci="9" mb="0" cb="0"/><line nr="8" mi="0" ci="9" mb="0" cb="0"/><line nr="9" mi="0" ci="9" mb="0" cb="0"/><line nr="10" mi="0" ci="9" mb="0" cb="0"/><line nr="11" mi="0" ci="9" mb="0" cb="0"/><line nr="12" mi="0" ci="9" mb="0" cb="0"/><line nr="13" mi="0" ci="9" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><line nr="16" mi="0" ci="9" mb="0" cb="0"/><line nr="17" mi="0" ci="9" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="16" mb="1" cb="1"/><line nr="46" mi="0" ci="5" mb="0" cb="2"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="213"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="4" covered="430"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="50"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="3"/></package><package name="model"><class name="model/Card" sourcefilename="Card.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lenumtype/CardSuit;Lenumtype/CardValue;)V" line="17"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="25"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSuits" desc="()Lenumtype/CardSuit;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Lenumtype/CardValue;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueEquals" desc="(Lenumtype/CardValue;)Z" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="16" covered="40"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="model/HandCombinations" sourcefilename="HandCombinations.java"><method name="toString" desc="()Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getListCombination" desc="()Ljava/util/List;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setListCombination" desc="(Ljava/util/List;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lmodel/HandCombinations;)I" line="33"><counter type="INSTRUCTION" missed="4" covered="30"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="4" covered="57"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="model/Combination" sourcefilename="Combination.java"><method name="toString" desc="()Ljava/lang/String;" line="13"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lenumtype/CardCombination;Lenumtype/CardValue;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Lenumtype/CardCombination;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Lenumtype/CardCombination;)V" line="36"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getValue" desc="()Lenumtype/CardValue;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Lenumtype/CardValue;)V" line="46"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compareTo" desc="(Lmodel/Combination;)I" line="52"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="6" covered="29"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="82"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="85"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="model/Hand" sourcefilename="Hand.java"><method name="toString" desc="()Ljava/lang/String;" line="15"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCards" desc="()Ljava/util/List;" line="31"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCards" desc="(Ljava/util/List;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="41"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="36" covered="81"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Card.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="7" mb="0" cb="0"/><line nr="14" mi="0" ci="7" mb="0" cb="0"/><line nr="15" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="3" ci="0" mb="0" cb="0"/><line nr="20" mi="1" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="17" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="16" covered="40"/><counter type="LINE" missed="5" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Combination.java"><line nr="13" mi="0" ci="17" mb="0" cb="0"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="2"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="7" mb="2" cb="2"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="13" mb="0" cb="2"/><line nr="76" mi="2" ci="3" mb="1" cb="1"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="85"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Hand.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="12" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="11" mb="0" cb="0"/><line nr="23" mi="0" ci="11" mb="0" cb="0"/><line nr="24" mi="0" ci="11" mb="0" cb="0"/><line nr="25" mi="0" ci="11" mb="0" cb="0"/><line nr="26" mi="0" ci="11" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="2" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="7" ci="0" mb="4" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="36" covered="81"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="6" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="HandCombinations.java"><line nr="14" mi="0" ci="12" mb="0" cb="0"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="2" ci="7" mb="1" cb="1"/><line nr="34" mi="0" ci="11" mb="1" cb="1"/><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="57"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="84" covered="263"/><counter type="BRANCH" missed="12" covered="10"/><counter type="LINE" missed="22" covered="43"/><counter type="COMPLEXITY" missed="17" covered="20"/><counter type="METHOD" missed="8" covered="18"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="1104" covered="1439"/><counter type="BRANCH" missed="91" covered="57"/><counter type="LINE" missed="125" covered="190"/><counter type="COMPLEXITY" missed="76" covered="64"/><counter type="METHOD" missed="12" covered="54"/><counter type="CLASS" missed="3" covered="12"/></report>